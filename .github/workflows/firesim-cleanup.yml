name: firesim-cleanup

on:
  schedule:
    - cron: "0,30 */1 * * *"

defaults:
  run:
    shell: bash -leo pipefail {0}

env:
  PERSONAL_ACCESS_TOKEN: ${{ secrets.BARTENDER_PERSONAL_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_08012023 }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_08012023 }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION_08012023 }}
  FIRESIM_PEM: ${{ secrets.FIRESIM_PEM_08012023 }}
  FIRESIM_PEM_PUBLIC: ${{ secrets.FIRESIM_PEM_PUBLIC }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_DEFAULT_REGION: ${{ secrets.AZURE_DEFAULT_REGION }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_CI_SUBNET_ID : ${{ secrets.AZURE_CI_SUBNET_ID }}
  AZURE_CI_NSG_ID : ${{ secrets.AZURE_CI_NSG_ID }}
  MANAGER_FIRESIM_LOCATION: "~/firesim"
  REMOTE_WORK_DIR: unused
  TERM: xterm-256-color

jobs:
  cull-old-ci-instances:
    name: cull-old-ci-instances
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: conda-reqs/ci-shared.yaml
          miniforge-version: latest
      - uses: ./.github/actions/repo-setup-aws
      - run: .github/scripts/cull-old-ci-instances.py
      - if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_CHANNEL: firesim-github-update
            SLACK_COLOR: ${{ job.status }}
            SLACK_TITLE: "CULLED CI INSTANCES (PLEASE VERIFY CI IS WORKING CORRECTLY!)"
            SLACK_MESSAGE: "@channel. Please verify: https://github.com/firesim/firesim/actions/workflows/firesim-cleanup.yml"
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  cull-old-ci-runners:
    name: cull-old-ci-runners
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: conda-reqs/ci-shared.yaml
          miniforge-version: latest
      - uses: ./.github/actions/repo-setup-aws
      - run: .github/scripts/cull-old-ci-runners.py
