# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
executors:
  main-env:
    docker:
      - image: firesim/firesim-ci:v1.0
        user: "centos"
    environment:
        JVM_MEMORY: 3500M # Default JVM maximum heap limit
        LANG: en_US.UTF-8 # required by sbt when it sees boost directories

commands:
  machinelaunchscript:
    description: "Run firesim's machine launch script"
    steps:
      - run:
          command: |
            cd scripts && /usr/bin/bash ./machine-launch-script.sh

  buildsetup:
    description: "Run firesim's build-setup.sh"
    steps:
      - run:
          command: |
            ./build-setup.sh fast

  scala-build:
    description: "Compile all relevant Scala sources for CI"
    steps:
      - run:
          command: |
            source env.sh
            make -C sim TARGET_PROJECT=midasexamples sbt SBT_COMMAND=test:compile

  build-scala-doc:
    description: "Compiles Scala Doc"
    steps:
      - run:
          command: |
            source env.sh
            make -C sim scaladoc

  push-scaladoc-to-ghpages:
    description: "Pushes scaladoc to ghphage branch"
    steps:
      - run:
          command: |
            git config --global user.email "biancolin@berkeley.edu"
            git config --global user.name "circleci"
      - when:
          condition: << pipeline.git.tag >>
          steps:
          - run:
              command: |
                source env.sh
                export SBT_GHPAGES_COMMIT_MESSAGE="[ci skip] Update scaladoc for << pipeline.git.tag >> release"
                make -C sim TARGET_PROJECT=midasexamples sbt SBT_COMMAND='set apiDirectory := \"<< pipeline.git.tag >>\"; ghpagesPushSite'
      - unless:
          condition: << pipeline.git.tag >>
          steps:
          - run:
              command: |
                source env.sh
                export SBT_GHPAGES_COMMIT_MESSAGE="[ci skip] Update scaladoc for dev:<< pipeline.git.revision >>"
                make -C sim TARGET_PROJECT=midasexamples sbt SBT_COMMAND="ghpagesPushSite"

  run-scala-test:
    description: "Runs the scala test with name <test-package>.<test-name>"
    parameters:
      project:
        type: string
        default: "firesim"
      test-name:
        type: string
      test-package:
        type: string
        default: "firesim.midasexamples"
      separate-elaboration:
        description: Runs separate elaboration step to avoid multiple invocations of SBT.
        type: boolean
        default: true
      timeout:
        type: string
        default: "120m"
    steps:
      - when:
          condition: <<parameters.separate-elaboration>>
          steps:
          - run:
              command: |
                  source env.sh
                  make -C sim TARGET_PROJECT=midasexamples sbt \
                      SBT_COMMAND="project << parameters.project >>; Test / runMain firesim.EmitCIElaborationScript elaborate.sh << parameters.test-package >>.<< parameters.test-name >>"
                  bash -x sim/elaborate.sh || true
              no_output_timeout: << parameters.timeout >>
      - run:
          command: |
              source env.sh
              make -C sim TARGET_PROJECT=midasexamples sbt \
                  SBT_COMMAND="project << parameters.project >>; testOnly << parameters.test-package >>.<< parameters.test-name >> -- -Dci-skip-elaboration=true"
          no_output_timeout: << parameters.timeout >>

  repo-setup:
    description: "Runs all baseline setup tasks up to scala compilation."
    steps:
      - add_ssh_keys:
          fingerprint:
            - 0e:d9:c3:3b:62:03:7a:da:17:1f:a9:5a:4f:34:50:4c
      - checkout
      - machinelaunchscript
      - buildsetup
      - scala-build

jobs:
  run-test-groupA:
    executor: main-env
    steps:
      - repo-setup
      - run-scala-test:
          test-name: "CIGroupA"
      - build-scala-doc

  run-test-groupB:
    executor: main-env
    steps:
      - repo-setup
      - run-scala-test:
          test-name: "CIGroupB"
      - run-scala-test:
           project: "midas"
           test-package: "*"
           test-name: "*"
           separate-elaboration: false

  publish-scala-doc:
    executor: main-env
    steps:
      - repo-setup
      - build-scala-doc
      - push-scaladoc-to-ghpages

workflows:
   version: 2

   firesimCIall:
     jobs:
       - run-test-groupA
       - run-test-groupB
       - publish-scala-doc:
           filters:
             branches:
               only:
                 - dev
             tags:
               only:
                 - /[0-9]*\.[0-9]*\.[0-9]*/

